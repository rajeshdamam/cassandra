#
# This is an example YAML profile for cassandra-stress
#  
# cassandra-stress write -schema yaml=/home/jake/stress1.yaml 
# cassandra-stress read -schema yaml=/home/jake/stress1.yaml query=simple1


#
# Keyspace info
#
keyspace: stresscql

#
# The CQL for creating a keyspace (optional if it already exists)
#
keyspace_definition: |
  CREATE KEYSPACE stresscql WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};

#
# Table info
#
table: insanitytest

#
# The CQL for creating a table you wish to stress (optional if it already exists)
#
table_definition: |
  CREATE TABLE insanitytest (
        name text,
        choice boolean,
        date timestamp,
        address inet,
        dbl double,
        lval bigint,
        fval float,
        ival int,
        uid timeuuid,
        dates list<timestamp>,
        inets set<inet>,
        value blob,
        PRIMARY KEY((name, choice), date)
  ) WITH compaction = { 'class':'LeveledCompactionStrategy' }
    AND comment='A table of many types to test wide rows and collections'

#
# Optional meta information on the generated columns in the above table
# The min and max only apply to text and blob types
# The distribution field represents the total unique population
# distribution of that column across rows.  Supported types are
# 
#      EXP(min..max)                        An exponential distribution over the range [min..max]
#      EXTREME(min..max,shape)              An extreme value (Weibull) distribution over the range [min..max]
#      GAUSSIAN(min..max,stdvrng)           A gaussian/normal distribution, where mean=(min+max)/2, and stdev is (mean-min)/stdvrng
#      GAUSSIAN(min..max,mean,stdev)        A gaussian/normal distribution, with explicitly defined mean and stdev
#      UNIFORM(min..max)                    A uniform distribution over the range [min, max]
#      FIXED(val)                           A fixed distribution, always returning the same value
#      Aliases: extr, gauss, normal, norm, weibull
#
# Defaults for all columns are min: 1, max: 256, distribution: uniform(1..1024)
#
columnspec:
  - name: name
    min: 1
    max: 20 
    distribution: uniform(1..4)
  - name: date
    distribution: gaussian(1..20)
  - name: lval
    distribution: fixed(1)
  - name: dates
    distribution: uniform(1..100)
  - name: inets
    distribution: uniform(1..200)
  - name: value
    min: 1
    max: 1024

#
# A list of queries you wish to run against the schema
#
queries:
   simple1: select * from insanitytest where name = ? and choice = ? LIMIT 100

#
# In order to generate data consistently we need something to generate a unique key for this schema profile.
#
seed: changing this string changes the generated data. its hashcode is used as the random seed.
